- name: Create the module file for cri
  become: yes
  file:
    state: touch
    path: /etc/modules-load.d/cri.conf
    access_time: preserve
    modification_time: preserve

- name: Get the cri module file
  become: yes
  stat:
    path: /etc/modules-load.d/cri.conf
  register: cri_module_file

- name: Configure cri module
  become: yes
  blockinfile:
    insertafter: EOF
    path: /etc/modules-load.d/cri.conf
    block: |
      overlay
      br_netfilter
  when: cri_module_file.stat.exists

- name: Add modules overlay and br_netfilter
  become: yes
  command: "modprobe {{ item }}"
  with_items:
  - overlay
  - br_netfilter

- name: Setup required sysctl net params
  become: yes
  sysctl:
    state: present
    name: "net.{{ item }}"
    value: 1
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  with_items:
  - bridge.bridge-nf-call-iptables
  - ipv4.ip_forward
  - bridge.bridge-nf-call-ip6tables

- name: CRI as containerd
  block:
  - name: Add Docker GPG key
    become: yes
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Configure Docker's upstream APT repository
    become: yes
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      update_cache: true

  - name: Install containerd
    become: yes
    apt:
      state: present
      update_cache: yes
      name:
      - "containerd.io={{ containerd_version }}"

  - name: Get containerd default configurations
    become: yes
    command: containerd config default
    register: containerd_default_config
    run_once: yes

  - name: Set containerd config
    set_fact:
      containerd_config: "{{ containerd_default_config.stdout | from_toml | combine(containerd_systemd_cgroup_driver, recursive=True) }}"

  - name: Template the containerd configuration
    become: yes
    template:
      src: containerd_config.toml
      dest: /etc/containerd/config.toml
      mode: '0644'
      owner: root
      group: root
    vars:
      config: "{{ containerd_config }}"

  - name: Restart containerd
    become: yes
    systemd:
      state: restarted
      name: containerd
      daemon_reload: true
  when:
  - containerd

- name: CRI as CRI-O
  block:
  - name: Add repository keys for CRI-O
    become: yes
    apt_key:
      url: "{{ item }}"
      state: present
    with_items:
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_os }}/Release.key"
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ crio_version }}/{{ crio_os }}/Release.key"

  - name: Add repositories for CRI-O
    become: yes
    apt_repository:
      repo: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
    - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_os }}/ /"
    - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ crio_version }}/{{ crio_os }}/ /"

  - name: Install CRI-O
    become: yes
    apt:
      state: present
      update_cache: yes
      name:
      - cri-o
      - cri-o-runc

  - name: Enable & Start CRI-O
    become: yes
    systemd:
      enabled: yes
      state: started
      name: crio
      daemon_reload: true

  - name: Create the configurtaion for CRI-O capabilities
    become: yes
    file:
      state: touch
      path: /etc/crio/crio.conf.d/03-capabilities.conf
      access_time: preserve
      modification_time: preserve

  - name: Configure default capabilities for CRI-O
    become: yes
    blockinfile:
      insertafter: EOF
      path: /etc/crio/crio.conf.d/03-capabilities.conf
      block: |
        [crio.runtime]
        default_capabilities = [
          "CHOWN",
          "DAC_OVERRIDE",
          "FSETID",
          "FOWNER",
          "SETGID",
          "SETUID",
          "SETPCAP",
          "NET_BIND_SERVICE",
          "KILL",
          "NET_RAW",
        ]

  - name: Restart CRI-O
    become: yes
    systemd:
      state: restarted
      name: crio
      daemon_reload: true
  when:
  - crio

- name: Install cri-tools
  become: yes
  unarchive:
    remote_src: yes
    src: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/{{ item }}-{{ crictl_version }}-linux-amd64.tar.gz"
    dest: /usr/local/bin/
  with_items:
  - crictl

