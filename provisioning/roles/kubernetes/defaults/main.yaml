---
# For optional roles
containerd: False
crio: False
storage_class: False
metrics_server: False
prometheus: False
keda: False

# containerd
containerd_version: 1.6.6-1
containerd_systemd_cgroup_driver:
  plugins:
    io.containerd.grpc.v1.cri:
      containerd:
        runtimes:
          runc:
            options:
              SystemdCgroup: true
controlplane_node_hostname: "{{ groups['controlplane'][0] }}"
controlplane_node_ip: "{{ hostvars[controlplane_node_hostname]['ansible_facts']['enp0s8']['ipv4']['address'] }}"

# crio-o
crio_version: "1.24"
crio_os: "xUbuntu_{{ ansible_distribution_version }}"

# kubeadm
kube_version: 1.24.2

kube_apiserver_port: 6443
kube_pod_network_cidr: 172.16.0.0/16

kubeadm_init_options:
  apiserver-advertise-address: "{{ controlplane_node_ip }}"
  control-plane-endpoint: "{{ controlplane_node_ip }}:{{ kube_apiserver_port }}"
  apiserver-cert-extra-sans: "{{ controlplane_node_ip }}"
  pod-network-cidr: "{{ kube_pod_network_cidr }}"
  #cri-socket: unix:///var/run/containerd/containerd.sock
  cri-socket: /var/run/crio/crio.sock


controlplane_selector:
  nodeSelector:
    kubernetes.io/hostname: "{{ controlplane_node_hostname }}"
controlplane_toleration:
  tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule

controlplane_selector_toleration: "{{ controlplane_selector | combine(controlplane_toleration) }}"

# prometheus
prometheus_namespace: prometheus
prometheus_kube_prometheus_stack: prometheus
prometheus_service_url: "http://{{ prometheus_kube_prometheus_stack }}-kube-prometheus-prometheus.{{ prometheus_namespace }}"
